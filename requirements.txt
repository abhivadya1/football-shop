django
gunicorn
whitenoise
psycopg2-binary
requests
urllib3
python-dotenv


function buildProductCardElement(item) {
    const article = document.createElement('article');
    article.className = 'bg-white rounded-lg border border-gray-200 hover:shadow-lg transition-shadow duration-300 overflow-hidden flex flex-col h-full';

    const linkDetail = `{% url 'main:show_product' '00000000-0000-0000-0000-000000000000' %}`.replace('00000000-0000-0000-0000-000000000000', item.id);
    const linkEdit = `{% url 'main:edit_product' '00000000-0000-0000-0000-000000000000' %}`.replace('00000000-0000-0000-0000-000000000000', item.id);
    const linkDelete = `{% url 'main:delete_product' '00000000-0000-0000-0000-000000000000' %}`.replace('00000000-0000-0000-0000-000000000000', item.id);

    const title = DOMPurify.sanitize(item.name);
    const description = DOMPurify.sanitize(item.description);
    const category = DOMPurify.sanitize(item.category);
    const thumbnail = DOMPurify.sanitize(item.thumbnail);
    const createdAt = DOMPurify.sanitize(new Date(item.created_at).toLocaleDateString('en-US', { 
        year: 'numeric', 
        month: 'short', 
        day: 'numeric' 
    }));
    const productViews = DOMPurify.sanitize(item.item_views);
    const isFeatured = item.is_featured;
    const isHot = productViews > 20;

    const thumbnailHtml = DOMPurify.sanitize(
        item.thumbnail ? `<img src='${thumbnail}' alt='${title}' class='w-full h-full object-cover'>` : `<div class='w-full h-full bg-gradient-to-br from-gray-100 to-gray-200 flex items-center justify-center'></div>`
    );
    const categoryLabel = DOMPurify.sanitize(getReadableCategoryName(category));
    const featuredLabel = isFeatured ? DOMPurify.sanitize(`<span class='inline-flex items-center px-2 py-1 rounded text-xs font-medium bg-yellow-100 text-yellow-800'>Featured</span>`) : '';
    const hotLabel = isHot ? DOMPurify.sanitize(`<span class='inline-flex items-center px-2 py-1 rounded text-xs font-medium bg-red-100 text-red-800'>Hot</span>`) : '';

    const editDeleteHtml = CURRENT_USER_ID && Number(CURRENT_USER_ID) === Number(item.user_id)
        ? `<div class='flex space-x-2'>
            <a href='${linkEdit}' class='text-gray-600 hover:text-gray-700 text-sm transition-colors'>Edit</a>
            <a href='${linkDelete}' class='text-red-600 hover:text-red-700 text-sm transition-colors' onclick='return confirm("Are you sure you want to delete this article?")'>Delete</a>
          </div>`
        : '';

    const cardHtml = `
        <div class="aspect-[16/9] relative overflow-hidden">
          ${thumbnailHtml}
          <div class="absolute top-3 left-3">
            <span class="inline-flex items-center px-2.5 py-0.5 rounded-md text-xs font-medium bg-green-600 text-white">${categoryLabel}</span>
          </div>
          <div class="absolute top-3 right-3 flex space-x-2">
            ${featuredLabel}
            ${hotLabel}
          </div>
        </div>
        <div class="p-5 flex flex-col flex-1">
          <div class="flex items-center text-sm text-gray-500 mb-3">
            <time>${createdAt}</time>
            <span class="mx-2">â€¢</span>
            <span>${productViews} views</span>
          </div>
          <h3 class="text-lg font-semibold text-gray-900 mb-3 line-clamp-2 leading-tight">
            <a href="${linkDetail}" class="hover:text-green-600 transition-colors">${title}</a>
          </h3>
          <p class="text-gray-600 text-sm leading-relaxed line-clamp-3 mb-4">${description}</p>
          <div class="pt-4 border-t border-gray-100 flex items-center justify-between">
            <a href="${linkDetail}" class="text-green-600 hover:text-green-700 font-medium text-sm transition-colors">Read more</a>
            ${editDeleteHtml}
          </div>
        </div>
    `;
    
    article.innerHTML = cardHtml;
    return article;
}